<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<root>

<name>map()</name>

<category>Math</category>

<subcategory>Calculation</subcategory>

<type></type>

<example>
<image />
<code><![CDATA[
size(200, 200)
value = 25
m = map(value, 0, 100, 0, width)
ellipse(m, 200, 10, 10)
]]></code>
</example>

<example>
<image />
<code><![CDATA[
value = 110
m = map(value, 0, 100, -20, -10)
println(m)# Prints "-9.0"
]]></code>
</example>

<example>
<image />
<code><![CDATA[
def setup(): 
    size(200, 200)
    noStroke()

def draw(): 
    background(204)
    x1 = map(mouseX, 0, width, 50, 150)
    ellipse(x1, 75, 50, 50)
    x2 = map(mouseX, 0, width, 0, 200)
    ellipse(x2, 125, 50, 50)
]]></code>
</example>

<description><![CDATA[
Re-maps a number from one range to another.<br/>
<br/>
In the first example above, the number 25 is converted from a value in the range of 0 to 100 into a value that ranges from the left edge of the window (0) to the right edge (width).<br/>
<br/>
As shown in the second example, numbers outside of the range are not clamped to the minimum and maximum parameters values, because out-of-range values are often intentional and useful.
]]></description>

<syntax>
map(<c>value</c>, <c>start1</c>, <c>stop1</c>, <c>start2</c>, <c>stop2</c>)
</syntax>

<parameter>
<label>value</label>
<description><![CDATA[float: the incoming value to be converted]]></description>
</parameter>

<parameter>
<label>start1</label>
<description><![CDATA[float: lower bound of the value's current range]]></description>
</parameter>

<parameter>
<label>stop1</label>
<description><![CDATA[float: upper bound of the value's current range]]></description>
</parameter>

<parameter>
<label>start2</label>
<description><![CDATA[float: lower bound of the value's target range]]></description>
</parameter>

<parameter>
<label>stop2</label>
<description><![CDATA[float: upper bound of the value's target range]]></description>
</parameter>

<related>
norm()
lerp()
</related>

</root>
